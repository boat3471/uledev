#!/usr/bin/env node

/* ↓↓↓ 输入参数检查 ↓↓↓ */
var _args = process.argv.slice(2);
if(!_args.length) return console.info('\r\n  简单就是终极的复杂 · 达芬奇');

var fs = require('fs');
var path = require('path');
var extend = require('extend');

/* ↓↓↓ 初始化系统信息 ↓↓↓ */
var _username = process.env.username;
var _cmdPath = process.cwd();

/* ↓↓↓ 初始化 uledev 模块信息 ↓↓↓ */
var _info = require('./package.json');
var _name = _info.name;
var _version = _info.version;


// var uledevName = packageInfo.name;
// var uledevName = packageInfo.name;
// var uledevName = packageInfo.name;
// var uledevName = packageInfo.name;

// console.info(_username);

var _arg = ''
	, _handle = null
	, _ule = {};

while(_args.length){
	_arg = _args.shift();
	switch(_arg){
		case '-h':
		case 'help':
			var cmdList = require('./ule-conf/help-command.json');
			console.info('');
			console.info(cmdList.join('\n'));
			console.info('');
			break;
		case '-v':
		case 'version':
			_initDate();
			console.info(_name, _version);
			break;
		case '-s':
		case 'start':
			_killProcess();
			_initDate();
			_handle = require('./ule-modules/ule-start');
			_handle();
			break;
		case 'event':
			_initDate();
			_handle = require('./ule-modules/ule-event');
			_handle(_args.shift());
			break;
		case 'base64':
			_initDate();
			_handle = require('./ule-modules/ule-base64');
			_handle();
			break;
		case 'load':
			_initDate();
			_handle = require('./ule-modules/ule-load');
			_handle();
			break;
		default:
			console.info('\r\n  无效命令, 请执行 uledev -h 查询相关命令');
			return;
	}
}

function _initDate(){
	_ule = {
		name: '',
		version: '',
		description: '',
		author: '',
		cmd: _cmdPath,
		hostsPath: '',
		hosts: [],
		packageJsonPath: path.normalize(path.join(__dirname, '../package.json')),
		uledevJsonPath: path.normalize(path.join(__dirname, '../lib/default-uledev.json')),
		uledevJsonOwnPath: path.normalize(path.join(_cmdPath, 'uledev.json')),
		uledevEventJsonPath: path.normalize(path.join(__dirname, '../lib/default-uledev-event.json')),
		uledevEventJsonOwnPath: path.normalize(path.join(_cmdPath, 'uledev-event.json'))
	};

	var packageData = require(_ule.packageJsonPath);
	var configData = fs.existsSync(_ule.uledevJsonOwnPath) ? require(_ule.uledevJsonOwnPath) : require(_ule.uledevJsonPath);

	extend(_ule, packageData);
	extend(_ule, configData);

	global.ule = _ule;
}

function _killProcess(){
	var pidPath = './pid.json';
	var exec = require('child_process').exec;
	var fs = require('fs');
	var oldPid = 0;
	var exists = fs.existsSync(pidPath);
	if(exists) oldPid = require(pidPath).pid;
	fs.writeFileSync(pidPath, JSON.stringify({
		pid: process.pid
	}, null, 4));
	if(oldPid > 0)
		exec('taskkill /F /pid ' + oldPid, function(err, stdout, stderr){});
	console.info('[ULE] 启动进程: ', process.pid);
}