#!/usr/bin/env node
/* ule前端项目开发启动器 */
require('./ule-modules/console');
require('./ule-modules/init');
module.exports = {
	launch: function(){
		var http = require('http');
		var server = http.createServer(ule.app);

		require('./ule-modules/hosts')(function(){
			var port = normalizePort(process.env.PORT || ule.port);
			var app = require('./ule-modules/main');

			app(port);
			server.listen(port);
			server.on('error', onError);
			server.on('listening', onListening);
		});

		function onError(error){
			if(error.syscall !== 'listen')
				throw error;
			var bind = typeof port === 'string'
				? 'Pipe ' + port
				: 'Port ' + port;
			switch(error.code){
				case 'EACCES':
					error('权限不足，无法启动 ' + bind + ' 端口！');
					process.exit(1);
					break;
				case 'EADDRINUSE':
					console.error('端口: ' + bind + ' 被占用！');
					process.exit(1);
					break;
				default:
					throw error;
			}
		}

		function onListening(){
			var addr = server.address();
			var bind = typeof addr === 'string'
				? 'pipe ' + addr
				: 'port ' + addr.port;
			log('启动成功！ 监听端口：' + addr.port);
		}

		function normalizePort(val){
			var port = parseInt(val, 10);
			if(isNaN(port))
				return val;
			if(port >= 0)
				return port;
			return false;
		}
	}
};

