#!/usr/bin/env node
var fs = require('fs');
var path = require('path');
var extend = require('extend');
var moment = require('moment');
var uledevData = require('./ule-conf/uledev.json');
var eventData = require('./ule-conf/uledev-event.json');

module.exports = {
	rootPath: __dirname,
	ownPath: '',
	getUledevData: function(){
		var ownJsonPath = path.join(this.ownPath, 'uledev.json');
		var ownJsonData = require(ownJsonPath);
		return ownJsonData || uledevData;
	},
	createOwnUledevEvent: function(){
		var ownJsonPath = path.normalize(path.join(__ownPath, 'uledev-event.json'));
		var exists = fs.existsSync(ownJsonPath);
		if(!exists) this.writeJsonFile(eventData, ownJsonPath);

	},
	getUledevEventData: function(){
		var ownJsonPath = path.normalize(path.join(__ownPath, 'uledev-event.json'));
		var exists = fs.existsSync(ownJsonPath);
		if(!exists) this.createOwnUledevEvent();
		var ownJsonData = require(ownJsonPath);
		delete require.cache[ownJsonPath];
		return ownJsonData || eventData;
	},
	mkdirs: function(){
		if(!arguments || arguments.length == 0) return;
		var list = Array.prototype.slice.apply(arguments);
		var dirPath = list.shift() || process.cwd();
		while(list.length){
			var item = list.shift();
			dirPath = path.normalize(path.join(dirPath, item));
			var exists = fs.existsSync(dirPath);
			if(exists) continue;
			fs.mkdirSync(dirPath);
			console.info('[ULE] 创建目录: ', dirPath);
		}
	},
	writeJsonFile: function(data, path){
		if(!path) return;
		data = data || {};
		fs.writeFileSync(path, JSON.stringify(data, null, 4));
	},
	isDev: function(){
		fs.existsSync(path.join(__dirname, '.dev'));
	}
};