#!/usr/bin/env node

killProcess();

var _args = process.argv.slice(2)
	, _arg = ''
	, _handle = null
	, _helpInfo = ''
	, _ule = {};

if(!_args.length){
	console.info('\r\n  简单就是终极的复杂 · 达芬奇');
	return;
}

var fs = require('fs');
var path = require('path');
var extend = require('extend');

var _cmdPath = global.__cmdPath = process.cwd();

while(_args.length){
	_arg = _args.shift();
	switch(_arg){
		case '-h':
		case '-help':
			console.info(_helpInfo);
			break;
		case '-v':
		case '--version':
			_initDate();
			console.info(_ule.name, _ule.version);
			break;
		case '-s':
		case 'start':
			_initDate();
			_handle = require('../lib/ule-modules/cmd/ule-start');
			_handle();
			break;
		case 'event':
			_initDate();
			_handle = require('../lib/ule-modules/cmd/ule-event');
			_handle(_args.shift());
			break;
		case 'base64':
			_initDate();
			_handle = require('../lib/ule-modules/cmd/ule-base64');
			_handle();
			break;
		case 'load':
			_initDate();
			_handle = require('../lib/ule-modules/cmd/ule-load');
			_handle();
			break;
		default:
			console.info('\r\n  无效命令, 请执行 uledev -h 查询相关命令');
			return;
	}
}

_helpInfo = [''
	, '  uledev 命令:'
	, '    -h, --help               显示帮助信息'
	, '    -v, --version            显示版本号'
	, '    -s, start                运行ULE开发环境'
	, '    event                    创建一个活动'
	, '    event -copy              复制一个活动'
	, '    event -del               删除一个活动'
	, '    base64                   转换图片的base64码'
	, '    load                     下载文件'
	, '    load -css                加载css图片'
	, ''
].join('\n');

function _initDate(){
	_ule = {
		name: '',
		version: '',
		description: '',
		author: '',
		cmd: _cmdPath,
		hostsPath: '',
		hosts: [],
		packageJsonPath: path.normalize(path.join(__dirname, '../package.json')),
		defaultJsonPath: path.normalize(path.join(__dirname, '../lib/uledev.json')),
		ownJsonPath: path.normalize(path.join(_cmdPath, 'uledev.json'))
	};

	var packageData = require(_ule.packageJsonPath);
	var configData = fs.existsSync(_ule.ownJsonPath) ? require(_ule.ownJsonPath) : require(_ule.defaultJsonPath);

	extend(_ule, packageData);
	extend(_ule, configData);

	global.ule = _ule;
}

function killProcess(){
	var exec = require('child_process').exec;
	var fs = require('fs');
	var oldPid = require('./pid.json').pid;
	fs.writeFileSync('./pid.json', JSON.stringify({
		pid: process.pid
	}, null, 4));
	if(oldPid > 0) exec('taskkill /F /pid ' + oldPid, function(err, stdout, stderr){});
}